config D
   bool "D"
   select D31
   imply D32

config DUMMY
   select D33 if D
   imply D34 if D

# The symbols below depend on D in different ways

config D1
    def_bool D

config D2
    int "D2" if D

config D3
    int "D3"
    depends on D

config D4
    bool "D4"
    default D

config D5
    bool
    default y if D

config D6
    int
    range 0 1 if D

menuconfig D7
    int
    range D 1

config D8
    int
    range 0 D

# D9 and D10 depend on D even though they have no prompt, because it's needed
# to get invalidation right for 'imply'

if D
config D9
    bool
endif

config D10
    bool
    depends on D

if D
config D11
    bool "D11"
endif

menu "m"
    depends on D

config D12
    bool "D12"

menu "nested"

config D13
    bool "D13"

endmenu
endmenu

# Indirect dependency
config D14
    def_tristate D13

menu "m"
    depends on D
if D
# Depends on D in lots of different ways
config D15
    int "D15" if D
    depends on D && D12
    default D if D
    range D D if D
endif
endmenu

# Different kinds of expressions

config D16
    bool "D16" if D || n

config D17
    bool "D17" if n || D

config D18
    bool "D18" if D && y

config D19
    bool "D19" if y && D

config D20
    bool "D20" if !D

config D21
    bool "D21" if !D && y

config D22
    bool "D22" if !(D && y)

config D23
    bool "D23" if (D)

config D24
    bool "D24" if ((D))

config D25
    bool "D25" if n || (y && n || (m || D))

config D26
    bool "D26" if D = n

config D27
    bool "D27" if n = D

config D28
    bool "D28" if n != D

config D29
    bool "D29" if D != n

config D30
    bool "D30" if n || ((n != D) || n)

config D31
    tristate "D31"

config D32
    tristate "D32"

config D33
    tristate "D33"

config D34
    tristate "D34"

config D35
    int "D35"
    default 0 if D < 0

config D36
    int "D36"
    default 0 if 0 < D

config D37
    int "D37"
    default 0 if 0 <= D

config D38
    int "D38"
    default 0 if 0 > D

config D39
    int "D39"
    default 0 if 0 >= D

#
# Choices
#

choice
    tristate "choice" if S

config A
    bool "A"

config B
    bool "B"

config C
    bool "C"

endchoice

config S
    bool "S"
